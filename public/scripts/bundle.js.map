{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAY,GAGhB,MAWMC,EAAaA,KACfC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,GAAW,EAIhEA,EAhBoBM,MAChB,MAAMC,EAAcL,aAAaM,QAAQ,aAEzC,IACI,OAAOD,EAAcH,KAAKK,MAAMF,GAAe,EACnD,CAAE,MAAOG,GACL,MAAO,EACX,GASQJ,GAGZ,MAYMK,EAAS,WAEX,MAAMC,EAAgBC,SAASC,cAAc,kBAE7CF,EAAcG,UAAY,GAG1Bf,EAAUgB,SAASC,IAEf,MAAMC,EAAaL,SAASM,cAAc,OAC1CD,EAAWE,YAAcH,EAAOI,GAChCH,EAAWI,UAAUC,IAAI,QACzBX,EAAcY,YAAYN,GAC1B,MAAMG,EAAK,KAAOI,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACnDV,EAAWW,aAAa,KAAMR,EAAG,IAKlBR,SAASiB,iBAAiB,SAElCd,SAASe,IAEhB,MAAMC,EAAenB,SAASM,cAAc,UAC5Ca,EAAaZ,YAAc,SAC3BY,EAAaV,UAAUC,IAAI,iBAC3BQ,EAAWP,YAAYQ,EAAa,IAIxCC,QAAQC,IAAI,oBAChB,EA+BMC,EAAQnC,EAAUoC,KAAKC,GAASA,EAAKC,YAC3CL,QAAQC,IAAIC,GAGZF,QAAQC,IAAIlC,GA9EK,WACb,MAAMuC,EAAgB1B,SAASC,cAAc,kBAGvC0B,EAAkB3B,SAASM,cAAc,UAC3CqB,EAAgBpB,YAAc,iBAC9BoB,EAAgBlB,UAAUC,IAAI,aAC9BgB,EAAcf,YAAYgB,EAElC,CC5BAC,GAIA9B,IAGAE,SAASC,cAAc,cAAc4B,iBAAiB,SAAS,SAAUhC,GD0D1DiC,MACX,MAAMtB,EAAK,KAAOI,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAEnD5B,EAAU4C,KACN,CACIvB,GAAIA,EACJiB,UAAW,GACXO,SAAU,GACVC,IAAK,EACLC,SAAU,KAGnB9C,GAAY,ECrEX0C,GACAhC,IACAsB,QAAQC,IAAI,yBAChB,IAGgBrB,SAASiB,iBAAiB,kBAElCd,SAAQ,SAASgC,GACvBA,EAAON,iBAAiB,SAAS,SAAShC,GDiEtBW,KAElB,MAAM4B,EAAcjD,EAAUkD,WAAWjC,GClEzCkC,YDkEoDlC,EAAOI,KAEvD4B,GAAe,GACfjD,EAAUoD,OAAOH,EAAa,GAElChD,GAAY,ECvEZkD,GACAxC,IACAsB,QAAQC,IAAI,uBACd,GACF,G","sources":["webpack://boilerplate/./src/functions.js","webpack://boilerplate/./src/index.js"],"sourcesContent":["//create array\r\nlet newMember = []\r\n\r\n// Read existing notes from local storage,\r\nconst loadMembers = () => {\r\n    const membersJSON = localStorage.getItem(\"newMember\")\r\n    \r\n    try {\r\n        return membersJSON ? JSON.parse(membersJSON) : []\r\n    } catch (e) {\r\n        return []\r\n    }   \r\n}\r\n\r\n// save members to localStorage\r\nconst saveMember = () => {\r\n    localStorage.setItem(\"newMember\", JSON.stringify(newMember))\r\n}\r\n\r\n//expose members from module\r\nnewMember = loadMembers()\r\n\r\n//render input elements\r\nconst inputDom = function () {\r\n    const selectInputEl = document.querySelector(\"#input-element\")\r\n\r\n    //create add new member button\r\n    const createAddButton = document.createElement('button')\r\n        createAddButton.textContent = \"add new member\"\r\n        createAddButton.classList.add(\"addButton\")\r\n        selectInputEl.appendChild(createAddButton)\r\n\r\n}\r\n\r\n//render function to be called when the array is updated or browser refreshes\r\nconst render = function () {\r\n\r\n    const selectArrayEl = document.querySelector(\"#array-element\")\r\n\r\n    selectArrayEl.innerHTML = ''\r\n    \r\n    //create a seperate div on the page for each object within the array\r\n    newMember.forEach((member) => {\r\n        \r\n        const createDivs = document.createElement('div')\r\n        createDivs.textContent = member.id\r\n        createDivs.classList.add(\"divs\")\r\n        selectArrayEl.appendChild(createDivs)\r\n        const id = \"id\" + Math.random().toString(16).slice(2)\r\n        createDivs.setAttribute('id', id)\r\n        \r\n    })\r\n\r\n    //Create a button for each newMember div\r\n    const selectDivs = document.querySelectorAll(\".divs\")\r\n\r\n    selectDivs.forEach((selectDivs) => {\r\n       \r\n        const createButton = document.createElement('button')\r\n        createButton.textContent = \"Delete\"\r\n        createButton.classList.add(\"deleteButtons\")\r\n        selectDivs.appendChild(createButton)\r\n\r\n    })\r\n\r\n    console.log(\"the page rendered\")\r\n}\r\n\r\n//add new object of data to array\r\nconst addNew = () => {\r\n    const id = \"id\" + Math.random().toString(16).slice(2)\r\n    \r\n    newMember.push(\r\n        {\r\n            id: id,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            age: 0,\r\n            location: \"\"\r\n        }\r\n    )\r\n   saveMember()\r\n}\r\n\r\n//remove member from the array\r\n\r\nconst removeMember = (id) => {\r\n    \r\n    const memberIndex = newMember.findIndex((member) => member.id === id)\r\n    \r\n    if (memberIndex > -1) {\r\n        newMember.splice(memberIndex, 1)\r\n    }\r\n    saveMember()\r\n}\r\n\r\n//Create list in the console with itemised data from the Array\r\nconst names = newMember.map((item) => item.firstName)\r\nconsole.log(names)\r\n\r\n//Display all information from newMember array in the console\r\nconsole.log(newMember)\r\n\r\nexport { inputDom, render, addNew, removeMember }","\r\nimport { inputDom, render, addNew, removeMember } from './functions'\r\n\r\n//render the input Dom\r\ninputDom(\r\n\r\n)\r\n//render the array\r\nrender()\r\n\r\n//eventhandler for the add new member button\r\ndocument.querySelector(\".addButton\").addEventListener(\"click\", function (e) {\r\n    addNew()\r\n    render()\r\n    console.log(\"You added a new member\")\r\n})\r\n\r\n//eventhandler for the delete buttons \r\nconst buttons = document.querySelectorAll(\".deleteButtons\")\r\n\r\nbuttons.forEach(function(button) {\r\n  button.addEventListener(\"click\", function(e) {\r\n    removeMember()\r\n    render()\r\n    console.log('You deleted a member')\r\n  })\r\n})\r\n\r\n"],"names":["newMember","saveMember","localStorage","setItem","JSON","stringify","loadMembers","membersJSON","getItem","parse","e","render","selectArrayEl","document","querySelector","innerHTML","forEach","member","createDivs","createElement","textContent","id","classList","add","appendChild","Math","random","toString","slice","setAttribute","querySelectorAll","selectDivs","createButton","console","log","names","map","item","firstName","selectInputEl","createAddButton","inputDom","addEventListener","addNew","push","lastName","age","location","button","memberIndex","findIndex","removeMember","splice"],"sourceRoot":""}