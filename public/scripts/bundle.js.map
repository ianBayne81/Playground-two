{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAY,GAGhB,MAWMC,EAAaA,KACfC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,GAAW,EAIhEA,EAhBoBM,MAChB,MAAMC,EAAcL,aAAaM,QAAQ,aAEzC,IACI,OAAOD,EAAcH,KAAKK,MAAMF,GAAe,EACnD,CAAE,MAAOG,GACL,MAAO,EACX,GASQJ,GAGZ,MAuEMK,EAAS,WAEX,MAAMC,EAAgBC,SAASC,cAAc,kBAE7CF,EAAcG,UAAY,GAG1Bf,EAAUgB,SAASC,IAEf,MAAMC,EAAaL,SAASM,cAAc,OAC1CD,EAAWE,YAAcH,EAAOI,GAChCH,EAAWI,UAAUC,IAAI,QACzBX,EAAcY,YAAYN,GAC1B,IAAIG,EAAKJ,EAAOI,GAChBH,EAAWO,aAAa,KAAMJ,EAAG,IAKlBR,SAASa,iBAAiB,SAElCV,SAASW,IAEhB,MAAMC,EAAef,SAASM,cAAc,UAC5CS,EAAaH,aAAa,OAAQ,UAClCG,EAAaR,YAAc,SAC3BQ,EAAaN,UAAUC,IAAI,iBAC3BI,EAAWH,YAAYI,GAGPf,SAASa,iBAAiB,kBAElCV,SAAQ,SAASa,GACrBA,EAAOC,iBAAiB,SAAS,SAAUpB,GAC3CA,EAAEqB,iBArDQV,KAElB,MAAMW,EAAchC,EAAUiC,WAAWhB,GAAWA,EAAOI,KAAOA,IAE9DW,GAAe,GACfhC,EAAUkC,OAAOF,EAAa,GAElC/B,GAAY,EAgDJkC,CADYzB,EAAE0B,OAAOC,WAAWhB,IAEhCV,GACA,GACJ,GAAE,GAIV,EAGM2B,EAAQtC,EAAUuC,KAAKC,GAASA,EAAKC,YAC3CC,QAAQC,IAAIL,GAGZI,QAAQC,IAAI3C,GAzHK,WACb,MAAM4C,EAAgB/B,SAASC,cAAc,kBAGvC+B,EAAkBhC,SAASM,cAAc,UAC/C0B,EAAgBzB,YAAc,iBAC9ByB,EAAgBvB,UAAUC,IAAI,iBAE9BsB,EAAgBpB,aAAa,KADjB,cAEZoB,EAAgBpB,aAAa,OAAQ,UACrCmB,EAAcpB,YAAYqB,GAG1B,MAAMC,EAAiBjC,SAASM,cAAc,SAC9C2B,EAAeC,YAAc,mBAC7BD,EAAexB,UAAUC,IAAI,gBAE7BuB,EAAerB,aAAa,KADX,aAEjBqB,EAAerB,aAAa,OAAQ,SACpCmB,EAAcpB,YAAYsB,GAI1B,MAAME,EAAwBnC,SAASM,cAAc,UACrD6B,EAAsB5B,YAAc,aACpC4B,EAAsB1B,UAAUC,IAAI,iBAEpCyB,EAAsBvB,aAAa,KADjB,cAElBuB,EAAsBvB,aAAa,OAAQ,UAC3CmB,EAAcpB,YAAYwB,EAE9B,CClDAC,GAGAtC,IAGAE,SAASC,cAAc,eAAegB,iBAAiB,SAAS,SAAUpB,GACtEA,EAAEqB,iBD8CSmB,MACX,MAAM7B,EAAK,KAAO8B,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAEnDtD,EAAUuD,QACN,CACIlC,GAAIA,EACJoB,UAAW,GACXe,SAAU,GACVC,IAAK,EACLC,SAAU,KAGnBzD,GAAY,ECzDXiD,GACAvC,GACJ,IAGAE,SAASC,cAAc,eAAegB,iBAAiB,SAAS,SAAUpB,GACxEA,EAAEqB,iBDsEA/B,EAAUkC,OAAO,EAAGlC,EAAU2D,QAC9B1D,ICrEFU,GACF,G","sources":["webpack://playground-two/./src/functions.js","webpack://playground-two/./src/index.js"],"sourcesContent":["//create array\r\nlet newMember = []\r\n\r\n// Read existing notes from local storage,\r\nconst loadMembers = () => {\r\n    const membersJSON = localStorage.getItem(\"newMember\")\r\n    \r\n    try {\r\n        return membersJSON ? JSON.parse(membersJSON) : []\r\n    } catch (e) {\r\n        return []\r\n    }   \r\n}\r\n\r\n// save members to localStorage\r\nconst saveMember = () => {\r\n    localStorage.setItem(\"newMember\", JSON.stringify(newMember))\r\n}\r\n\r\n//expose members from module\r\nnewMember = loadMembers()\r\n\r\n//render input elements\r\nconst inputDom = function () {\r\n    const selectInputEl = document.querySelector(\"#input-element\")\r\n\r\n    //create add new member button\r\n    const createAddButton = document.createElement('button')\r\n    createAddButton.textContent = \"add new member\"\r\n    createAddButton.classList.add(\"inputElButton\")\r\n    const add = \"add-button\"\r\n    createAddButton.setAttribute('id', add)\r\n    createAddButton.setAttribute('type', 'button')\r\n    selectInputEl.appendChild(createAddButton)\r\n\r\n    //create input field for the members first name\r\n    const createInputOne = document.createElement('input')\r\n    createInputOne.placeholder = \"enter first name\"\r\n    createInputOne.classList.add(\"inputElField\")\r\n    const inputOne = \"input-one\"\r\n    createInputOne.setAttribute('id', inputOne)\r\n    createInputOne.setAttribute('type', 'input')\r\n    selectInputEl.appendChild(createInputOne)\r\n\r\n\r\n    //create delete all members button\r\n    const createDeleteAllButton = document.createElement('button')\r\n    createDeleteAllButton.textContent = \"Delete all\"\r\n    createDeleteAllButton.classList.add(\"inputElButton\")\r\n    const deleteAll = \"delete-all\"\r\n    createDeleteAllButton.setAttribute('id', deleteAll)\r\n    createDeleteAllButton.setAttribute('type', 'button')\r\n    selectInputEl.appendChild(createDeleteAllButton)\r\n\r\n}\r\n\r\n//add new object of data to array\r\nconst addNew = () => {\r\n    const id = \"id\" + Math.random().toString(16).slice(2)\r\n    \r\n    newMember.unshift(\r\n        {\r\n            id: id,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            age: 0,\r\n            location: \"\"\r\n        }\r\n    )\r\n   saveMember()\r\n\r\n}\r\n\r\n//remove individual member from the array\r\n\r\nconst removeMember = (id) => {\r\n    \r\n    const memberIndex = newMember.findIndex((member) => member.id === id)\r\n    \r\n    if (memberIndex > -1) {\r\n        newMember.splice(memberIndex, 1)\r\n    }\r\n    saveMember()\r\n}\r\n\r\n//delete all members from the array \r\n\r\nconst deleteAll = () => {\r\n    newMember.splice(0, newMember.length)\r\n    saveMember()\r\n}\r\n\r\n\r\n//render function to be called when the array is updated or browser refreshes\r\nconst render = function () {\r\n\r\n    const selectArrayEl = document.querySelector(\"#array-element\")\r\n\r\n    selectArrayEl.innerHTML = ''\r\n    \r\n    //create a seperate div on the page for each object within the array\r\n    newMember.forEach((member) => {\r\n        \r\n        const createDivs = document.createElement('div')\r\n        createDivs.textContent = member.id\r\n        createDivs.classList.add(\"divs\")\r\n        selectArrayEl.appendChild(createDivs)\r\n        let id = member.id\r\n        createDivs.setAttribute('id', id)\r\n        \r\n    })\r\n\r\n    // //Create a delete button for each newMember div\r\n    const selectDivs = document.querySelectorAll(\".divs\")\r\n\r\n    selectDivs.forEach((selectDivs) => {\r\n       \r\n        const createButton = document.createElement('button')\r\n        createButton.setAttribute('type', 'button')\r\n        createButton.textContent = \"Delete\"\r\n        createButton.classList.add(\"deleteButtons\")\r\n        selectDivs.appendChild(createButton)\r\n\r\n        //create eventlistener for each delete button\r\n        const buttons = document.querySelectorAll(\".deleteButtons\")\r\n\r\n        buttons.forEach(function(button) {\r\n            button.addEventListener(\"click\", function (e) {\r\n            e.preventDefault()\r\n            let getId = e.target.parentNode.id\r\n            removeMember(getId)\r\n            render()\r\n            })\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\n//Create list in the console with itemised data from the Array\r\nconst names = newMember.map((item) => item.firstName)\r\nconsole.log(names)\r\n\r\n//Display all information from newMember array in the console\r\nconsole.log(newMember)\r\n\r\nexport { inputDom, render, addNew, deleteAll }","\r\nimport { inputDom, render, addNew, deleteAll } from './functions'\r\n\r\n//render the input Dom\r\ninputDom()\r\n\r\n//render the array\r\nrender()\r\n\r\n//eventhandler for the add new member button\r\ndocument.querySelector(\"#add-button\").addEventListener(\"click\", function (e) {\r\n    e.preventDefault()\r\n    addNew()\r\n    render()\r\n})\r\n\r\n//eventhandler for the delete all members button\r\ndocument.querySelector(\"#delete-all\").addEventListener(\"click\", function (e) {\r\n  e.preventDefault()\r\n  deleteAll()\r\n  render()\r\n})\r\n\r\n"],"names":["newMember","saveMember","localStorage","setItem","JSON","stringify","loadMembers","membersJSON","getItem","parse","e","render","selectArrayEl","document","querySelector","innerHTML","forEach","member","createDivs","createElement","textContent","id","classList","add","appendChild","setAttribute","querySelectorAll","selectDivs","createButton","button","addEventListener","preventDefault","memberIndex","findIndex","splice","removeMember","target","parentNode","names","map","item","firstName","console","log","selectInputEl","createAddButton","createInputOne","placeholder","createDeleteAllButton","inputDom","addNew","Math","random","toString","slice","unshift","lastName","age","location","length"],"sourceRoot":""}