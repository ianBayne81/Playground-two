{"version":3,"file":"site-bundle.js","mappings":"mBACA,IAAIA,EAAY,GAGhB,MAWMC,EAAaA,KACfC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,GAAW,EAyBhEA,EArCoBM,MAChB,MAAMC,EAAcL,aAAaM,QAAQ,aAEzC,IACI,OAAOD,EAAcH,KAAKK,MAAMF,GAAe,EACnD,CAAE,MAAOG,GACL,MAAO,EACX,GA8BQJ,GAGZ,MA+DMK,EAAQX,EAAUY,KAAKC,GAASA,EAAKC,YAC3CC,QAAQC,IAAIL,GAGZI,QAAQC,IAAIhB,GC5GZ,MAAMA,EDiBmBA,ECdnBiB,EAAWf,aAAaM,QAAQ,SAChCU,EAAcC,SAASC,cAAc,eACrCC,EAAiBF,SAASC,cAAc,cACxCE,EAAaH,SAASC,cAAc,QACpCG,EAAkBJ,SAASC,cAAc,aAGvBH,KAEtB,MAAMO,EAASxB,EAAUyB,MAAMD,GAAWA,EAAOE,KAAOT,IAGlDU,EAAYR,SAASC,cAAc,oBACnCQ,EAAaT,SAASU,cAAc,KAC1CD,EAAWE,aAAa,KAAM,cAC9BF,EAAWG,YAAcP,EAAOE,GAChCC,EAAUK,YAAYJ,GAGtBV,EAAYe,MAAQT,EAAOV,UAC3BO,EAAeY,MAAQT,EAAOU,SAC9BZ,EAAWW,MAAQT,EAAOW,IAC1BZ,EAAgBU,MAAQT,EAAOY,QAAQ,EAKzCC,CAAepB,GAuCf,IAAIqB,EAAYnB,SAASoB,iBAAiB,kBAG1CpB,SAASC,cAAc,iBAAiBoB,iBAAiB,UAAU,SAAU9B,GACzEA,EAAE+B,iBAxCeC,EAAChB,EAAIiB,KACxB,IAAInB,EAASxB,EAAUyB,MAAMD,GAAWA,EAAOE,KAAOA,IAEjDF,IAIDmB,EAAQ7B,UAAU8B,OAAS,GAAKD,EAAQT,SAASU,OAAS,GAAoB,IAAfD,EAAQR,KAAaQ,EAAQP,SAASQ,OAAS,EAC9GC,MAAM,6BACCF,EAAQR,IAAM,GACrBU,MAAM,sBAENrB,EAAOV,UAAY6B,EAAQ7B,UAC3BU,EAAOU,SAAWS,EAAQT,SAC1BV,EAAOW,IAAMQ,EAAQR,IACrBX,EAAOY,SAAWO,EAAQP,SAC1BnC,IACA4C,MAAM,kBACV,EAuBEH,CAAazB,EAAU,CACrBH,UAAWI,EAAYe,MACvBC,SAAUb,EAAeY,MACzBE,IAAKb,EAAWW,MAChBG,SAAUb,EAAgBU,OAG9B,IAGFd,SAASC,cAAc,kBAAkBoB,iBAAiB,SAAS,SAAU9B,GAC3EA,EAAE+B,iBA5BkBf,KAEpB,IAAIoB,EAAc9C,EAAU+C,WAAWvB,GAAWA,EAAOE,KAAOA,IAE5DoB,GAAe,GACf9C,EAAUgD,OAAOF,EAAa,GAElC7C,GAAY,EAsBZgD,CAAahC,GACb4B,MAAM,mBACN1B,SAASC,cAAc,eAAe8B,UAAY,GAClDZ,EAAUa,SAAQC,GAAeA,EAAYnB,MAAQ,KACrDG,SAASiB,OAAO,cAClB,IAGAlC,SAASC,cAAc,kBAAkBoB,iBAAiB,SAAS,SAAU9B,GAC3EA,EAAE+B,iBACFvC,aAAaoD,WAAW,SACxBlB,SAASiB,OAAO,cAClB,G","sources":["webpack://playground-two/./src/functions.js","webpack://playground-two/./src/site.js"],"sourcesContent":["//create array\r\nlet newMember = []\r\n\r\n// Read existing notes from local storage,\r\nconst loadMembers = () => {\r\n    const membersJSON = localStorage.getItem(\"newMember\")\r\n    \r\n    try {\r\n        return membersJSON ? JSON.parse(membersJSON) : []\r\n    } catch (e) {\r\n        return []\r\n    }   \r\n}\r\n\r\n// save members to localStorage\r\nconst saveMember = () => {\r\n    localStorage.setItem(\"newMember\", JSON.stringify(newMember))\r\n}\r\n\r\n//function to expose array from module / used on site page\r\nconst getMembers = () => newMember\r\n\r\n\r\n//add new object of data to array\r\nconst addNew = (nameOne, nameTwo, age, location) => {\r\n    const id = \"id\" + Math.random().toString(16).slice(2)\r\n    \r\n    newMember.unshift(\r\n        {\r\n            id: id,\r\n            firstName: nameOne,\r\n            lastName: nameTwo,\r\n            age: age,\r\n            location: location\r\n        }\r\n    )\r\n   saveMember()\r\n\r\n}\r\n\r\n//load data from local storage\r\nnewMember = loadMembers()\r\n\r\n//render function to be called when the array is updated or browser refreshes\r\nconst render = function () {\r\n\r\n    ///Sort the array alphabetically\r\n    newMember.sort(function (a, b,) {\r\n        if (a.lastName+a.firstName > b.lastName+b.firstName) {\r\n            return 1\r\n        }\r\n\r\n        if (a.lastName+a.firstName < b.lastName+b.firstName) {\r\n            return -1\r\n        }\r\n\r\n        if (a.lastName+a.firstName === b.lastName+b.firstName) {\r\n            return 0\r\n        }\r\n        \r\n    })\r\n    \r\n    //clear array element so the new data can be displayed\r\n    const selectArrayEl = document.querySelector(\"#array-element\")\r\n    selectArrayEl.innerHTML = ''\r\n    \r\n    //create a seperate div on the page for each member within the array\r\n    newMember.forEach((member) => {\r\n        \r\n        const createDivs = document.createElement('div')\r\n        createDivs.textContent = `${member.lastName} ${member.firstName}`\r\n        createDivs.classList.add(\"divs\")\r\n        selectArrayEl.appendChild(createDivs)\r\n        let id = member.id\r\n        createDivs.setAttribute('id', id)\r\n        \r\n    })\r\n\r\n    // //Create a view button for each newMember div\r\n    const selectDivs = document.querySelectorAll(\".divs\")\r\n\r\n    selectDivs.forEach((selectDivs) => {\r\n       \r\n        const createButton = document.createElement('button')\r\n        createButton.setAttribute('type', 'button')\r\n        createButton.textContent = \"View\"\r\n        createButton.classList.add(\"viewButtons\")\r\n        selectDivs.appendChild(createButton)\r\n\r\n        //create eventlistener for each view button\r\n        const buttons = document.querySelectorAll(\".viewButtons\")\r\n\r\n        buttons.forEach(function(button) {\r\n            button.addEventListener(\"click\", function (e) {\r\n            e.preventDefault()\r\n            let getId = e.target.parentNode.id \r\n            localStorage.setItem(\"getId\", getId)\r\n            location.assign('/site.html')\r\n            })\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n//Create list in the console with itemised data from the Array\r\nconst names = newMember.map((item) => item.firstName)\r\nconsole.log(names)\r\n\r\n//Display all information from newMember array in the console\r\nconsole.log(newMember)\r\n\r\nexport { getMembers, render, addNew, saveMember }","import { getMembers, saveMember } from './functions'\r\n\r\n//load newMember data from functions\r\nconst newMember = getMembers()\r\n\r\n//variables used in site\r\nconst memberId = localStorage.getItem(\"getId\")\r\nconst nameElement = document.querySelector(\"#first-name\")\r\nconst surnameElement = document.querySelector(\"#last-name\")\r\nconst ageElement = document.querySelector(\"#age\")\r\nconst locationElement = document.querySelector(\"#location\")\r\n\r\n//render site page data function\r\nconst renderEditPage = (memberId) => {\r\n\r\n  const member = newMember.find((member) => member.id === memberId)\r\n\r\n  //create paragraph for the id and place in the heading element\r\n  const idElement = document.querySelector(\"#heading-element\")\r\n  const createPara = document.createElement(\"p\")\r\n  createPara.setAttribute(\"id\", \"id-heading\")\r\n  createPara.textContent = member.id\r\n  idElement.appendChild(createPara)\r\n  \r\n  //Place member details in the input fields\r\n  nameElement.value = member.firstName\r\n  surnameElement.value = member.lastName\r\n  ageElement.value = member.age\r\n  locationElement.value = member.location\r\n  \r\n}\r\n\r\n//render edit page data\r\nrenderEditPage(memberId)\r\n\r\n//edit, save and delete member details \r\nconst updateMember = (id, updates) => {\r\n  let member = newMember.find((member) => member.id === id)\r\n\r\n  if (!member) {\r\n    return\r\n  }\r\n\r\n  if (updates.firstName.length < 2 || updates.lastName.length < 2 || updates.age == \"\" || updates.location.length < 2) {\r\n      alert(\"Min character length is 2\")\r\n  } else if (updates.age < 18) {\r\n      alert(\"Minimum age is 18\")\r\n  } else {\r\n      member.firstName = updates.firstName\r\n      member.lastName = updates.lastName\r\n      member.age = updates.age\r\n      member.location = updates.location\r\n      saveMember()\r\n      alert(\"Contact saved\")\r\n  }\r\n\r\n}\r\n  \r\n//remove individual member from the array\r\n\r\nconst removeMember = (id) => {\r\n    \r\n  let memberIndex = newMember.findIndex((member) => member.id === id)\r\n  \r\n  if (memberIndex > -1) {\r\n      newMember.splice(memberIndex, 1)\r\n  }\r\n  saveMember()\r\n\r\n}\r\n\r\n//select all inputs\r\nlet allInputs = document.querySelectorAll(\".input-element\")\r\n\r\n// eventlistener for the form to save and submit details\r\ndocument.querySelector(\"#form-element\").addEventListener('submit', function (e) {\r\n    e.preventDefault()\r\n    updateMember(memberId, {\r\n      firstName: nameElement.value,\r\n      lastName: surnameElement.value,\r\n      age: ageElement.value,\r\n      location: locationElement.value\r\n    })\r\n    \r\n  })\r\n\r\n// eventlistener to remove contact button\r\ndocument.querySelector(\"#delete-button\").addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  removeMember(memberId)\r\n  alert(\"Contact deleted\")\r\n  document.querySelector(\"#id-heading\").innerHTML = \"\"\r\n  allInputs.forEach(singleInput => singleInput.value = '')\r\n  location.assign('/index.html')\r\n})\r\n\r\n//eventlistener for the return to home screen button\r\ndocument.querySelector(\"#return-button\").addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  localStorage.removeItem(\"getId\")\r\n  location.assign('/index.html')\r\n})"],"names":["newMember","saveMember","localStorage","setItem","JSON","stringify","loadMembers","membersJSON","getItem","parse","e","names","map","item","firstName","console","log","memberId","nameElement","document","querySelector","surnameElement","ageElement","locationElement","member","find","id","idElement","createPara","createElement","setAttribute","textContent","appendChild","value","lastName","age","location","renderEditPage","allInputs","querySelectorAll","addEventListener","preventDefault","updateMember","updates","length","alert","memberIndex","findIndex","splice","removeMember","innerHTML","forEach","singleInput","assign","removeItem"],"sourceRoot":""}