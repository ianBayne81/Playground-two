{"version":3,"file":"site-bundle.js","mappings":"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","sources":["webpack://playground-two/./src/functions.js","webpack://playground-two/./src/site.js"],"sourcesContent":["//create array\r\nlet newMember = []\r\n\r\n// Read existing notes from local storage,\r\nconst loadMembers = () => {\r\n    const membersJSON = localStorage.getItem(\"newMember\")\r\n    \r\n    try {\r\n        return membersJSON ? JSON.parse(membersJSON) : []\r\n    } catch (e) {\r\n        return []\r\n    }   \r\n}\r\n\r\n// save members to localStorage\r\nconst saveMember = () => {\r\n    localStorage.setItem(\"newMember\", JSON.stringify(newMember))\r\n}\r\n\r\n//function to expose array from module / used on site page\r\nconst getMembers = () => newMember\r\n\r\n\r\n//add new object of data to array\r\nconst addNew = (nameOne, nameTwo, day, month, year, mobileNumber, email, address, dob) => {\r\n    const id = \"id\" + Math.random().toString(16).slice(2)\r\n    \r\n    newMember.unshift({\r\n            id: id,\r\n            firstName: nameOne,\r\n            lastName: nameTwo,\r\n            day: day,\r\n            month: month,\r\n            year: year,\r\n            mobileNumber: mobileNumber,\r\n            email: email,\r\n            address: address,\r\n            dob: dob = `${year}-${month}-${day}`,\r\n            memberAge: `${nameOne} is ${Math.floor((new Date() - new Date(dob).getTime()) / 3.15576e+10)} years old`,\r\n    })\r\n   saveMember()\r\n\r\n}\r\n\r\n//load data from local storage\r\nnewMember = loadMembers()\r\n\r\n//render function to be called when the array is updated or browser refreshes\r\nconst render = function () {\r\n\r\n    //clear array element so the new data can be displayed\r\n    const selectArrayEl = document.querySelector(\"#array-element\")\r\n    selectArrayEl.innerHTML = ''\r\n\r\n    ///Sort the array alphabetically by last name and then first name\r\n    newMember.sort(function (a, b,) {\r\n        if (a.lastName+a.firstName > b.lastName+b.firstName) {\r\n            return 1\r\n        }\r\n\r\n        if (a.lastName+a.firstName < b.lastName+b.firstName) {\r\n            return -1\r\n        }\r\n\r\n        if (a.lastName+a.firstName === b.lastName+b.firstName) {\r\n            return 0\r\n        }\r\n        \r\n    })\r\n    \r\n    //create a seperate div on the page for each member within the array\r\n    newMember.forEach((member) => {\r\n        \r\n        const createDivs = document.createElement('div')\r\n        createDivs.textContent = `${member.firstName} ${member.lastName}`\r\n        createDivs.classList.add(\"divs\")\r\n        selectArrayEl.appendChild(createDivs)\r\n        let id = member.id\r\n        createDivs.setAttribute('id', id)\r\n        \r\n    })\r\n\r\n    // //Create a view button for each newMember div\r\n    const selectDivs = document.querySelectorAll(\".divs\")\r\n\r\n    selectDivs.forEach((selectDivs) => {\r\n       \r\n        const createButton = document.createElement('button')\r\n        createButton.setAttribute('type', 'button')\r\n        createButton.textContent = \"View\"\r\n        createButton.classList.add(\"viewButtons\")\r\n        selectDivs.appendChild(createButton)\r\n\r\n        //create eventlistener for each view button\r\n        const buttons = document.querySelectorAll(\".viewButtons\")\r\n\r\n        buttons.forEach(function(button) {\r\n            button.addEventListener(\"click\", function (e) {\r\n            e.preventDefault()\r\n            let getId = e.target.parentNode.id \r\n            localStorage.setItem(\"getId\", getId)\r\n            location.assign('/site.html')\r\n            })\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n//Create list in the console with itemised data from the Array\r\nconst names = newMember.map((item) => item.firstName)\r\nconsole.log(names)\r\n\r\n//Display all information from newMember array in the console\r\nconsole.log(newMember)\r\n\r\nexport { getMembers, render, addNew, saveMember }","import { getMembers, saveMember } from './functions'\r\n\r\n//load newMember data from functions\r\nconst newMember = getMembers()\r\n\r\n//variables used in site\r\nconst memberId = localStorage.getItem(\"getId\")\r\n\r\nlet nameOne = document.querySelector(\"#input-one\")\r\nlet nameTwo = document.querySelector(\"#input-two\")\r\nlet day = document.querySelector(\"#input-three\")\r\nlet month = document.querySelector(\"#input-four\")\r\nlet year = document.querySelector(\"#input-five\")\r\nlet mobileNumber = document.querySelector(\"#input-six\")\r\nlet email = document.querySelector(\"#input-seven\")\r\nlet address = document.querySelector(\"#input-eight\")\r\n\r\n//render site page data function\r\nconst renderEditPage = (memberId) => {\r\n\r\n  const member = newMember.find((member) => member.id === memberId)\r\n\r\n  //create paragraph for age and place in the heading element\r\n  const ageElement = document.querySelector(\"#heading-two\")\r\n  const createPara = document.createElement(\"p\")\r\n  createPara.textContent = member.memberAge\r\n  ageElement.appendChild(createPara)\r\n  \r\n  \r\n  //Place member details in the input fields\r\n  nameOne.value = member.firstName\r\n  nameTwo.value = member.lastName\r\n  day.value = member.day\r\n  month.value = member.month\r\n  year.value = member.year\r\n  mobileNumber.value = member.mobileNumber\r\n  email.value = member.email\r\n  address.value = member.address\r\n  \r\n}\r\n\r\n//render edit page data\r\nrenderEditPage(memberId)\r\n\r\n//edit, save and delete member details \r\nconst updateMember = (id, updates) => {\r\n  let member = newMember.find((member) => member.id === id)\r\n\r\n  if (!member) {\r\n    return\r\n  }\r\n\r\n  if (updates.firstName.length < 2 || updates.lastName.length < 2 || updates.day ==\"\" || updates.month ==\"\" || updates.year.length < 4) {\r\n      alert(\"Enter first name, last name and dob correctly\")\r\n  }  else {\r\n      member.firstName = updates.firstName\r\n      member.lastName = updates.lastName\r\n      member.day = updates.day\r\n      member.month = updates.month\r\n      member.year = updates.year\r\n      member.mobileNumber = updates.mobileNumber\r\n      member.email = updates.email\r\n      member.address = updates.address\r\n      member.dob = `${member.year}-${member.month}-${member.day}`,\r\n      member.memberAge = `${member.firstName} is ${Math.floor((new Date() - new Date(member.dob).getTime()) / 3.15576e+10)} years old`,\r\n      saveMember()\r\n      alert(\"Contact saved\")\r\n  }\r\n\r\n}\r\n  \r\n//remove individual member from the array\r\n\r\nconst removeMember = (id) => {\r\n    \r\n  let memberIndex = newMember.findIndex((member) => member.id === id)\r\n  \r\n  if (memberIndex > -1) {\r\n      newMember.splice(memberIndex, 1)\r\n  }\r\n  saveMember()\r\n\r\n}\r\n\r\n//select all inputs\r\nlet allInputs = document.querySelectorAll(\".input-element\")\r\n\r\n// eventlistener for the form to save and submit details\r\ndocument.querySelector(\"#form-element\").addEventListener('submit', function (e) {\r\n    e.preventDefault()\r\n    document.querySelector(\"#heading-two\").innerHTML = \"\"\r\n    updateMember(memberId, {\r\n      firstName: nameOne.value,\r\n      lastName: nameTwo.value,\r\n      day: day.value,\r\n      month: month.value,\r\n      year: year.value,\r\n      mobileNumber: mobileNumber.value,\r\n      email: email.value,\r\n      address: address.value,\r\n    })\r\n\r\n    renderEditPage(memberId)\r\n    \r\n  })\r\n\r\n// eventlistener to remove contact button\r\ndocument.querySelector(\"#delete-button\").addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  removeMember(memberId)\r\n  alert(\"Contact deleted\")\r\n  document.querySelector(\"#heading-two\").innerHTML = \"\"\r\n  allInputs.forEach(singleInput => singleInput.value = '')\r\n  location.assign('/index.html')\r\n})\r\n\r\n//eventlistener for the return to home screen button\r\ndocument.querySelector(\"#return-button\").addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  localStorage.removeItem(\"getId\")\r\n  location.assign('/index.html')\r\n})"],"names":["newMember","saveMember","localStorage","setItem","JSON","stringify","loadMembers","membersJSON","getItem","parse","e","names","map","item","firstName","console","log","memberId","nameOne","document","querySelector","nameTwo","day","month","year","mobileNumber","email","address","renderEditPage","member","find","id","ageElement","createPara","createElement","textContent","memberAge","appendChild","value","lastName","allInputs","querySelectorAll","addEventListener","preventDefault","innerHTML","updateMember","updates","length","alert","dob","Math","floor","Date","getTime","memberIndex","findIndex","splice","removeMember","forEach","singleInput","location","assign","removeItem"],"sourceRoot":""}